import { EmailData } from './email';

export async function sendTelegramNotification(data: EmailData): Promise<boolean> {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;
  
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–∫:');
  console.log('TELEGRAM_BOT_TOKEN –¥–æ—Å—Ç—É–ø–µ–Ω:', !!botToken);
  console.log('TELEGRAM_CHAT_ID –¥–æ—Å—Ç—É–ø–µ–Ω:', !!chatId);
  
  if (!botToken || !chatId) {
    console.log('Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É');
    return false;
  }
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–∫–µ–Ω–∞ –∏ chat_id
  if (!botToken.match(/^\d+:[A-Za-z0-9_-]+$/)) {
    console.error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_BOT_TOKEN. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å: 123456789:ABCDEF...');
    return false;
  }
  
  if (!chatId.match(/^-?\d+$/)) {
    console.error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_CHAT_ID. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789 –∏–ª–∏ -987654321)');
    return false;
  }
  
  try {
    const message = `
üè† <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ La Villa Pine</b>

üë§ <b>–ò–º—è:</b> ${data.name}
üìß <b>Email:</b> ${data.email}
${data.phone ? `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}` : ''}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${data.message}
    `.trim();

    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API...');
    console.log('URL:', url.replace(botToken, '[TOKEN]'));
    console.log('Chat ID:', chatId);
    
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });

    const responseText = await response.text();
    console.log('Telegram API –æ—Ç–≤–µ—Ç:', response.status, responseText);

    if (response.ok) {
      console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
      return true;
    } else {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è:', responseText);
      return false;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
    return false;
  }
}